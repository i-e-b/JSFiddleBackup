
function combine (a,b) {return (a * b)-1;}



console.log('start');
var canvas = document.getElementById("drawCanvas");
var ctx = canvas.getContext("2d");
var n = 51; // range of grid
var r = 15; // diameter of grid squares
var p = 60; // padding space for labels

function isPrime(num) {
	let lim = Math.sqrt(num)+1;
  for (var i = 2; i <= lim; i++) {
    if ((num % i) === 0) {
      return false;
    }
  }
  return true;
}

// color grid cells
for (var i = 0; i < n; i++) {
  for (var j = 0; j < n; j++) {
    var sum = combine(i*2, (j*2)+1);
    ctx.fillStyle = isPrime(sum) ? "orange" : "white";
    ctx.fillRect(p + i * r, p + j * r, r, r);
  }
}


// draw labels
ctx.fillStyle = "black";
var f = 12;
ctx.font = f + "px Helvetica";
for (var i = 0; i < n; i++) {
  var s = (i*2) + "";
  var w = ctx.measureText(s).width;
  ctx.save();
  ctx.translate(p + i * r + r / 2 - f * 0.4, p - w - 2);
  ctx.rotate(3.14159 / 2);
  ctx.fillText(s, 0, 0);
  ctx.restore();
}
for (var j = 0; j < n; j++) {
  var s = (j*2)+1 + "";
  var w = ctx.measureText(s).width;
  ctx.fillText(s, p - w - 2, p + j * r + r / 2 + f * 0.4);
}

// draw grid lines
ctx.beginPath();
ctx.strokeStyle = "black";
for (var i = 0; i <= n; i++) {
  ctx.moveTo(p + r * i, p);
  ctx.lineTo(p + r * i, p + r * n);
  ctx.moveTo(p, p + r * i);
  ctx.lineTo(p + r * n, p + r * i);
}
ctx.stroke();

console.log('done');
