<canvas id="target" width="650" height="450"></canvas>
<pre id="diag"></pre>
<h3>Parent repeater layout</h3>
<p>Purpose: A simple-as-possible set of page layout rules that allows for a wide range of automatic layout</p>
<p>Concept: Outer most container is fixed size. There is a single chain/list (NOT tree) of
sub-container types for the document. Each type has two link points (next,prev), which are relative to one of the corners (TL,TR,BL,BR). Each type has either a fixed or relative horz and vert size. Zero size means it will grow to fit its children, as long as that doesn't overflow the parent.</p>
<p>Contents are added to the leaf type, giving a fixed size (like the image size or glyph size). The layout is filled by adding a list of contents. This list can also contain 'breaks' which ends containers up to a certain level (like BRK1 stops the word, BRK2 stops the line, BRK3 stops the column)</p>
<p>When a content item can't fit in its container, a new parent container is spawned, and joined next->prev. If that container can't fit, the next parent up is created the same way. This continues up until success. If no success in the entire chain, the document is full. If a newly created container can't hold a content item, is this a fail?</p>
<p>If the type has <tt>glue</tt> set, then the content will break it's parent container if not all items can be fit together. This is useful for keeping letters together in words, but requires you to manually break each run</p>

<h3>Format</h3>
<p>A JSON array of objects. Each object is a next layer down in the chain.
There are a set of known properties, and everything else is ignored.
Names are given in the example for clarity, but are not used in the code.
Most values have defaults that will be used if not provided.
</p>
<p>The first container must have a fixed <tt>w</tt> and <tt>h</tt> value.
All other containers assume a flexible size if not given.</p>
<p>The <code>next</code> and <code>prev</code> objects can have fixed or relative <tt>x</tt> and <tt>y</tt> values. If relative, the size is calculated based on the parent's size</p>
<p>Defaults:</p>
<pre>
  {
    w:0,
    h:0,
    glue: false,
    next: {
      rel:"TR",
      x:0,
      y:0
    },
    prev: {
      rel:"TL",
      x:0,
      y:0
    }
  }
</pre>
<p>Example:</p>
<pre>
[
  {name:"Root", w:800, h:600},
  {name:"Column", w:"30%", next:{rel:"TR", x:"3%", y:0}, prev:{rel:"TL"}},
  {name:"Line", next:{rel:"BL"}},
  {name:"Word", next:{rel:"TR", x:"0.5em"}},
  {name:"Glyph", glue:true}
] 
</pre>