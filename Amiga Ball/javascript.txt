var sLat = 22.5;
var sLong = 22.5;
var radius = 80;
var x = 290;
var y = 180.3;
var n = 4.7;
var dn = 0.16;
var xs = -1.5;
var colourFlag = 0;
var c = document.getElementById("c");
var ctx = c.getContext("2d");
var altFrame = true;

function line(x1,y1, x2,y2){
	ctx.beginPath();
	ctx.moveTo(x1, y1);ctx.lineTo(x2, y2);
  ctx.stroke();
}
function strokeWeight(n){ctx.lineWidth = n;}
function stroke(r,g,b){ctx.strokeStyle = 'rgb('+r+','+g+','+b+')';}
function cos(deg){return Math.cos((Math.PI / 180) * deg);}
function sin(deg){return Math.sin((Math.PI / 180) * deg);}

function background(r,g,b){
	ctx.save();
  ctx.setTransform(1, 0, 0, 1, 0, 0);
	ctx.fillStyle = 'rgb('+r+','+g+','+b+')';
  ctx.fillRect(0, 0, c.width, c.height);
	ctx.restore();
}
function fill(r,g,b,a){
	a = a || 255;
	ctx.fillStyle = 'rgba('+r+','+g+','+b+','+(a/255)+')';
}
function resetMatrix(){ctx.setTransform(1, 0, 0, 1, 0, 0);}
function translate(x,y){ctx.translate(x, y);}
function noStroke(){}
function ellipse (x,y,width,height){
	var cx = x;
  var cy = y;
	ctx.beginPath();
	ctx.ellipse(cx, cy, width/2, height/2, 0, 0, 2 * Math.PI);
  ctx.fill();
}
function rotate(deg){ctx.rotate((Math.PI / 180) * deg);}

function quad(x1, y1, x2, y2, x3, y3, x4, y4){
	ctx.beginPath();
	ctx.moveTo(x1, y1);
  ctx.lineTo(x2, y2);
  ctx.lineTo(x3, y3);
  ctx.lineTo(x4, y4);
  ctx.fill();
}

var drawGrid = function(size) {
    stroke(155, 29, 227);
    strokeWeight(2);

    for (var vlines = 0, xpos = 0; vlines < 16; vlines++) {
        line(xpos, 0, xpos, size);
        xpos+=(size/15);
    }
    
    for (var vlines = 0, xpos = 0; vlines < 16; vlines++) {
        line(xpos, size, xpos*1.05-8, size+8);
        xpos+=(size/15);
    }    
    
    for (var hlines = 0, ypos = 0; hlines < 13; hlines++) {
        line(0, ypos, size, ypos);
        ypos+=(size/12);
    }
    
    ypos-=(size/12)-3;
    line(-1, ypos, size+2, ypos);
    ypos+=4;
    line(-5, ypos, size+6, ypos);


}

var drawBand = function( long1, long2, cf, ani ) {
    for ( var latDeg = -ani; latDeg <= (180-(sLat/2)); latDeg += sLat )
    {
        var ty = cos(long2) * radius;
        var by = cos(long1) * radius;
        var tx1 = cos(latDeg) * (radius * sin(long1 + sLong));
        var bx1 = cos(latDeg) * (radius * sin(long1));
        var tx2 = cos(latDeg + sLat) * (radius * sin(long1 + sLong));
        var bx2 = cos(latDeg + sLat ) * (radius * sin(long1));
        if (cf) { fill(255, 0, 0);} else { fill(255,255,255);}
        cf = cf^1;
        quad(tx1, ty, tx2, ty, bx2, by, bx1, by);
    }
}


var draw = function(frame_time) {
    requestAnimationFrame(draw);
    
    altFrame = !altFrame;
    if (altFrame) return; // half frame rate
    
    background(189, 189, 189);
    fill(255, 0, 0);
    resetMatrix();
    translate(30,31);
    drawGrid(342);

    resetMatrix();
    translate(x,y);
    noStroke();
    fill(0, 0, 0,110);
    ellipse (32,0,radius*2,radius*2);
    rotate(20.0);
    colourFlag = 1;

    for (var deg = 0; deg < 180; deg += sLong)
    {
        drawBand(deg, deg + sLong, colourFlag, 1600-x*2.4);
        colourFlag = colourFlag^1;
    }

    x = x + xs;
    if (x < 77){
        x = x - xs;
        xs = -xs;
    }
    if (x > 295){
        x = x - xs;
        xs = -xs;
    }
    
    y = y + n;
    n = n + dn;
    if (y > 290 ){
        n = n - dn;
        n = - n;
    }    
}

requestAnimationFrame(draw);